export const languageOptions = [
  { key: "apl", value: "apl", text: "Apl" },
  { key: "asciiarmor", value: "asciiarmor", text: "Asciiarmor" },
  { key: "asn.1", value: "asn.1", text: "Asn.1" },
  { key: "asterisk", value: "asterisk", text: "Asterisk" },
  { key: "brainfuck", value: "brainfuck", text: "Brainfuck" },
  { key: "clike", value: "clike", text: "Clike" },
  { key: "clojure", value: "clojure", text: "Clojure" },
  { key: "cmake", value: "cmake", text: "Cmake" },
  { key: "cobol", value: "cobol", text: "Cobol" },
  { key: "coffeescript", value: "coffeescript", text: "Coffeescript" },
  { key: "commonlisp", value: "commonlisp", text: "Commonlisp" },
  { key: "crystal", value: "crystal", text: "Crystal" },
  { key: "css", value: "css", text: "CSS" },
  { key: "cypher", value: "cypher", text: "Cypher" },
  { key: "d", value: "d", text: "D" },
  { key: "dart", value: "dart", text: "Dart" },
  { key: "diff", value: "diff", text: "Diff" },
  { key: "django", value: "django", text: "Django" },
  { key: "dockerfile", value: "dockerfile", text: "Dockerfile" },
  { key: "dtd", value: "dtd", text: "DTD" },
  { key: "dylan", value: "dylan", text: "Dylan" },
  { key: "ebnf", value: "ebnf", text: "EBNF" },
  { key: "ecl", value: "ecl", text: "ECL" },
  { key: "eiffel", value: "eiffel", text: "Eiffel" },
  { key: "elm", value: "elm", text: "ELM" },
  { key: "erlang", value: "erlang", text: "Erlang" },
  { key: "factor", value: "factor", text: "Factor" },
  { key: "fcl", value: "fcl", text: "FCL" },
  { key: "forth", value: "forth", text: "Forth" },
  { key: "fortran", value: "fortran", text: "Fortran" },
  { key: "gas", value: "gas", text: "GAS" },
  { key: "gfm", value: "gfm", text: "GFM" },
  { key: "gherkin", value: "gherkin", text: "Gherkin" },
  { key: "go", value: "go", text: "Go" },
  { key: "groovy", value: "groovy", text: "Groovy" },
  { key: "haml", value: "haml", text: "Haml" },
  { key: "handlebars", value: "handlebars", text: "Gandlebars" },
  { key: "haskell-literate", value: "haskell-literate", text: "Haskell Literate"},
  { key: "haskell", value: "haskell", text: "Haskell" },
  { key: "haxe", value: "haxe", text: "Haxe" },
  { key: "htmlembedded", value: "htmlembedded", text: "HTMLembedded" },
  { key: "htmlmixed", value: "htmlmixed", text: "HTMLmixed" },
  { key: "http", value: "http", text: "HTTP" },
  { key: "idl", value: "idl", text: "IDL" },
  { key: "javascript", value: "javascript", text: "Javascript" },
  { key: "jinja2", value: "jinja2", text: "Jinja2" },
  { key: "jsx", value: "jsx", text: "JSX" },
  { key: "julia", value: "julia", text: "Julia" },
  { key: "livescript", value: "livescript", text: "Livescript" },
  { key: "lua", value: "lua", text: "Lua" },
  { key: "markdown", value: "markdown", text: "Markdown" },
  { key: "mathematica", value: "mathematica", text: "Mathematica" },
  { key: "mbox", value: "mbox", text: "MBOX" },
  { key: "mirc", value: "mirc", text: "mIRC" },
  { key: "mllike", value: "mllike", text: "Mllike" },
  { key: "modelica", value: "modelica", text: "Modelica" },
  { key: "mscgen", value: "mscgen", text: "Mscgen" },
  { key: "mumps", value: "mumps", text: "MUMPS" },
  { key: "nginx", value: "nginx", text: "Nginx" },
  { key: "nsis", value: "nsis", text: "NSIS" },
  { key: "ntriples", value: "ntriples", text: "N-Triples" },
  { key: "octave", value: "octave", text: "Octave" },
  { key: "oz", value: "oz", text: "OZ" },
  { key: "pascal", value: "pascal", text: "Pascal" },
  { key: "pegjs", value: "pegjs", text: "Pegjs" },
  { key: "perl", value: "perl", text: "Perl" },
  { key: "php", value: "php", text: "PHP" },
  { key: "pig", value: "pig", text: "PIG" },
  { key: "powershell", value: "powershell", text: "Powershell" },
  { key: "properties", value: "properties", text: "Properties" },
  { key: "protobuf", value: "protobuf", text: "Protobuf" },
  { key: "pug", value: "pug", text: "PUG" },
  { key: "puppet", value: "puppet", text: "Puppet" },
  { key: "python", value: "python", text: "Python" },
  { key: "q", value: "q", text: "Q" },
  { key: "r", value: "r", text: "R" },
  { key: "rst", value: "rst", text: "RST" },
  { key: "ruby", value: "ruby", text: "Ruby" },
  { key: "rust", value: "rust", text: "Rust" },
  { key: "sas", value: "sas", text: "SAS" },
  { key: "sass", value: "sass", text: "SASS" },
  { key: "scheme", value: "scheme", text: "Scheme" },
  { key: "shell", value: "shell", text: "Shell" },
  { key: "sieve", value: "sieve", text: "Sieve" },
  { key: "slim", value: "slim", text: "Slim" },
  { key: "smalltalk", value: "smalltalk", text: "Smalltalk" },
  { key: "smarty", value: "smarty", text: "Smarty" },
  { key: "solr", value: "solr", text: "SOLR" },
  { key: "soy", value: "soy", text: "SOY" },
  { key: "sparql", value: "sparql", text: "Sparql" },
  { key: "spreadsheet", value: "spreadsheet", text: "Spreadsheet" },
  { key: "sql", value: "sql", text: "SQL" },
  { key: "stex", value: "stex", text: "Stex" },
  { key: "stylus", value: "stylus", text: "Stylus" },
  { key: "swift", value: "swift", text: "Swift" },
  { key: "tcl", value: "tcl", text: "TCL" },
  { key: "textile", value: "textile", text: "Textile" },
  { key: "tiddlywiki", value: "tiddlywiki", text: "Tiddlywiki" },
  { key: "tiki", value: "tiki", text: "Tiki" },
  { key: "toml", value: "toml", text: "TOML" },
  { key: "tornado", value: "tornado", text: "Tornado" },
  { key: "troff", value: "troff", text: "Troff" },
  { key: "ttcn-cfg", value: "ttcn-cfg", text: "TTCN CFG" },
  { key: "ttcn", value: "ttcn", text: "TTCN" },
  { key: "turtle", value: "turtle", text: "Turtle" },
  { key: "twig", value: "twig", text: "Twig" },
  { key: "vb", value: "vb", text: "VB" },
  { key: "vbscript", value: "vbscript", text: "Vbscript" },
  { key: "velocity", value: "velocity", text: "Velocity" },
  { key: "verilog", value: "verilog", text: "Verilog" },
  { key: "vhdl", value: "vhdl", text: "VHDL" },
  { key: "vue", value: "vue", text: "Vue" },
  { key: "wast", value: "wast", text: "Wast" },
  { key: "webidl", value: "webidl", text: "Webidl" },
  { key: "xml", value: "xml", text: "XML" },
  { key: "xquery", value: "xquery", text: "XQuery" },
  { key: "yacas", value: "yacas", text: "YACAS" },
  { key: "yaml-frontmatter", value: "yaml-frontmatter", text: "YAML Frontmatter" },
  { key: "yaml", value: "yaml", text: "YAML" },
  { key: "z80", value: "z80", text: "Z80" },
];
